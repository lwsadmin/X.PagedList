@*use this for the fake AjaxOptions since ajax helpers were dropped in .net core*@
@model IPagedList<string>
@*import this so we get our HTML Helper*@
@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc.Common;

@*import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@using X.PagedList;

<ul>
    @foreach (var name in Model)
    {
        <li>@name</li>
    }


</ul>



@Html.PagedListPager((IPagedList)ViewBag.Names, page => Url.Action("GetOnePageOfNames", new { page }),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
        new PagedListRenderOptions {
            MaximumPageNumbersToDisplay = 10,

            DisplayPageCountAndCurrentLocation = true,

            UlElementClasses = new[] { "pagination" },
            ContainerDivClasses = new[] { "pagination-container" } },
        new AjaxOptions() { DataForm = "searchForm", OnBegin = "return Begin(this);", HttpMethod = "GET", UpdateTargetId = "nameListContainer" }))

@{new GoToFormRenderOptions()
    {
        InputFieldClass = "form-control",
        InputWidth = 300,
        SubmitButtonClass = "btn",
        SubmitButtonWidth = 100
    };}
<script>

    function Begin(obj) {
        return true;
    }
</script>
@Html.PagedListGoToPageForm((IPagedList)ViewBag.Names, Url.Action("Index"),
    new GoToFormRenderOptions { InputFieldClass = "form-control",
        InputWidth = 300, SubmitButtonClass = "btn",
        SubmitButtonWidth = 100 })


